#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fstream>
#include <sstream>
#include <iostream>
#include <map>
#include <cstdlib>
#include <random>
#include <algorithm>
#include <vector>
using namespace std;

#define NORMAL_ARGV_NUM 2
#define PRM_REF_TABLE_SIZE 256
#define INTERVAL 4


int main(int argc, char* argv[])
{
    //コマンドライン引数
    //登録数
    if (argc != NORMAL_ARGV_NUM + 1)
    {
        printf("input num error\n");
        return 0;
    }
    int wiSetNum = atoi(argv[1]);
    //[応用] "INTERVALの倍数"の所を別の数式にして、関数化すればもっとランダムにできる
    int wi;
    vector<unsigned int> wuiShuffleTable;
    map<unsigned int, int> wuiShuffleIdxTable;
    map<unsigned int, int>::iterator it_s;
    for( wi = 0; wi < wiSetNum; wi++)
    {
        //[TODO] exelからのインプットにしたい
        wuiShuffleTable.push_back(wi*INTERVAL);
        wuiShuffleIdxTable[wuiShuffleTable[wi]] = wi;
    }

    random_device seed_gen;
    mt19937_64 engine(seed_gen());
    shuffle(wuiShuffleTable.begin(), wuiShuffleTable.end(), engine);

    map<int, unsigned int> wuiKeyTable;
    map<int, unsigned int>::iterator it;
    unsigned int wuiIdxTable[PRM_REF_TABLE_SIZE];
    int wiKey;
    for( wiKey = 0; wiKey < wiSetNum; wiKey++)
    {
        wuiKeyTable[wiKey] = wuiShuffleTable[wiKey];
    }
    for( wiKey = 0; wiKey < wiSetNum; wiKey++)
    {
        it = wuiKeyTable.find(wiKey);
        //key値がitで指定された区分IDであるときの要素を取得
        it_s = wuiShuffleIdxTable.find((*it).second);
        wuiIdxTable[(*it_s).second] = wiKey;
    }


    unsigned int zuiKeyTable[wiSetNum], zuiIdxTable[wiSetNum];
    for( wi = 0; wi < wiSetNum; wi++)
    {
        zuiKeyTable[wi] = wuiKeyTable[wi];
        zuiIdxTable[wi] = wuiIdxTable[wi];
    }

    //csvファイル出力
    char output_key_path[256], output_idx_path[256];
    sprintf(output_key_path, "PrmRefKeyTable_%02x_%s.csv", wiSetNum, argv[2]);
    sprintf(output_idx_path, "PrmRefIdxTable_%02x_%s.csv", wiSetNum, argv[2]);
    
    ofstream ofs_file_key(output_key_path);
    ofstream ofs_file_idx(output_idx_path);
    char output_key[1024], output_idx[1024];
    for( wi = 0; wi < wiSetNum; wi++)
    {
        sprintf(output_key, "uint,zuc(%d),0x%04x,", wi, zuiKeyTable[wi]);
        ofs_file_key << output_key << endl;
        sprintf(output_idx, "uint,zuc(%d),0x%04x,", wi, zuiIdxTable[wi]);
        ofs_file_idx << output_idx << endl;
    }

    return 0;
}
